def solution(video_len, pos, op_start, op_end, commands):
    # 오프닝 시간 구간을 스킵하는 함수
    def skip(time):
        # 주어진 시간이 오프닝 구간 내에 있다면 오프닝 끝 시간으로 스킵
        if op_start <= time <= op_end:
            return op_end
        return time  # 그 외의 경우는 입력된 시간을 그대로 반환
    
    # 시간 문자열을 초 단위로 변환하는 함수
    def time_to_seconds(time_str):
        minutes, seconds = map(int, time_str.split(":"))  # "mm:ss" 형태의 문자열을 분리
        return minutes * 60 + seconds  # 분을 초로 변환 후 총 초로 반환

    # 초 단위의 시간을 "mm:ss" 형식의 문자열로 변환하는 함수
    def seconds_to_time(seconds):
        minutes, seconds = divmod(seconds, 60)  # 초를 분과 초로 분리
        return f"{minutes:02d}:{seconds:02d}"  # "mm:ss" 형태로 포맷하여 반환

    # 입력된 시간들을 초 단위로 변환
    video_len, pos, op_start, op_end = map(time_to_seconds, [video_len, pos, op_start, op_end])
    
    # 초기 위치가 오프닝 시간에 포함되면 스킵
    pos = skip(pos)
    
    # 각 명령어에 따라 위치 조정
    for command in commands:
        if command == "prev":  # 이전 10초
            pos = max(0, pos-10)  # 위치를 10초 앞으로, 0보다 작아지지 않도록 조정
        else:  # 다음 10초
            pos = min(video_len, pos+10)  # 위치를 10초 뒤로, 비디오 길이를 넘지 않도록 조정
        pos = skip(pos)  # 조정된 위치가 오프닝 시간에 포함되면 스킵
            
    answer = seconds_to_time(pos)  # 최종 위치를 "mm:ss" 형식으로 변환
    return answer
